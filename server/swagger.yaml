swagger: "2.0"
info:
  description: Animal houz back&.
  version: 1.0.0
  title: Swagger Petstore
host: localhost:8080
basePath: /v1
tags:
- name: pet
- name: store
- name: user
- name: community
    
schemes:
- http
paths:
  /user/register:
    post:
      tags:
      - user
      summary: Create new user
      parameters:
      - in: body
        name: body
        description: UserCreation
        required: true
        schema:
          type: object
          properties:
              username:
                type: string
              password:
                type: string
              email:
                type: string
              firstName:
                type: string
              lastName:
                type: string
      responses:
        200:
          description: Success
  /user/login:
    post:
      tags:
      - user
      summary: Login as an user
      parameters:
      - in: body
        name: body
        description: login
        required: true
        schema:
          type: object
          properties:
              username:
                type: string
              password:
                type: string
      responses:
        200:
          description: Success  
          schema:
            type: object
            properties:
              token:
                type: string
  /user/current:
    get:
      tags:
      - user
      summary: Retrieve information about the current user
      security:  
        - JWT: []
      responses:
        200:
          description: ok
          schema:
            type: object
            properties:
              username:
                type: string
              _id:
                type: string
                
  /user/{id}:
    get:
      tags:
      - user
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: Numeric ID of the user to get
      security:
      - JWT: []
      responses:
        200:
          description: ok
          schema:
            $ref: "#/definitions/User"
  
  /user/{id}/score:
    get:
      tags:
      - user
      summary: Get game scores of the specified user
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: Guid of the user
      security:
      - JWT: []
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              type: object
              properties:
                  gameGuid:
                    type: string
                  score:
                    type: number
    put:
      tags:
      - user
      summary: Add a game score to the specified user
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: Guid of the user
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
                gameId:
                  type: string
                score:
                  type: number
      security:
      - JWT: []
      responses:
        200:
          description: ok
          schema:
            type: object
            properties:
                gameGuid:
                  type: string
                score:
                  type: number
  /user/{id}/cart:
    put:
      tags:
      - user
      summary: Add a product to the cart of the specified user
      parameters:
        - in: path
          name: id
          type: string
          required: true
          description: Id of the user
        - in: body
          name: body
          required: true
          schema:
            type: array
            items:
              type: object
              properties:
                  productId:
                    type: string
                  quantity:
                    type: number
      security:
      - JWT: []
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              type: object
              properties:
                  productId:
                    type: string
                  quantity:
                    type: number
    
    
  /pet:
    get:
        tags:
        - pet
        summary: Finds Pet
        operationId: getPet
        parameters:
        - name: id
          in: query
          description: Id of the pet
          required: true
          type: integer
        responses:
          200:
            description: successful operation
            schema: 
              $ref: "#/definitions/Pet"
    post:
      tags:
      - pet
      summary: Add a new pet
      operationId: addPet
      parameters:
      - in: body
        name: body
        description: Pet object
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        200:
          description: Success
          
  /community/game/:
    get:
        tags:
        - community
        summary: Fids all games
        responses:
          200:
            description: successful operation
            schema: 
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  _id:
                    type: string
            
securityDefinitions:  
  JWT:  
    type: apiKey  
    in: header  
    name: authorization 
    
    
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      phone:
        type: string
      pets:
        type: array # todo
        items:
          type: object
          properties:
            id:
              type: integer
            name: 
              type: string
      address: 
        type: object
        properties:
          country:
            type: string
          city:
            type: string
          street:
            type: string
          cap:
            type: integer
      
      
  Species:
    type: string
    enum: &SPECIES
      - Dog
      - Cat
      - Duck
      - Fox
      - Koala
      - Panda
      - Rabbit
      
  Pet:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      ownerId:
        type: integer
      specie:
        type: string
        enum: *SPECIES
      age:
        type: integer
  
  Product:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      price:
        type: number
      description:
        type: string
      image:
        type: string
      species:
        type: array
        items:
          type: string
          enum: *SPECIES
      address:
        type: string
    
  Shop:
    type: object
    properties:
      id:
        type: integer
        format: int64
      address: 
        type: object
        properties:
          country:
            type: string
          city:
            type: string
          street:
            type: string
          cap:
            type: integer
      products:
        type: array
        items:
          type: object
          properties:
            productId:
              type: integer
            quantity:
              type: integer
